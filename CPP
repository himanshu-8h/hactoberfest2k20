#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define vo vovels
#define fst first
#define snd second
#define SZ(x) ((int)(x).size())
#define endl '\n'
#define no numbers
#define mst(a, b) memset(a, b, sizeof(a)); // b can be 0 or -1 only
typedef long long ll;
typedef vector<int>               vi;
typedef vector<ll>                vll;
typedef vector<vi>                vvi;
typedef vector<vll>               vvll;
typedef vector<pair<int,int>>     vpii;
typedef double db;
const ll mod=1e9+7;

ll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}


int setBitNumber(int n) { 
    n |= n >> 1;  
    n |= n >> 2; 
    n |= n >> 4; 
    n |= n >> 8; 
    n |= n >> 16; 
    n = n + 1; 
    return (n >> 1); 
} 

int gXOR(multiset<int, greater<int>>& subarr){

    while(subarr.size() > 1){
        int a = *subarr.begin(); subarr.erase(subarr.begin());
        int b = *subarr.begin(); subarr.erase(subarr.begin());
        // if(a == b){
        //     subarr.insert(0);
        //     continue;
        // }
        subarr.insert(setBitNumber(a^b));
        // cout<<a<<" "<<b<<" "<<setBitNumber(a^b)<<endl;
    }
        return *subarr.begin();
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif

    // int t;
    // cin>>t;
    // while(t--) {

        int n;
        cin>>n;

        ll sum=0;
        vi arr(n);
        rep(i, 0, n){
            cin>>arr[i];
            sum += setBitNumber(arr[i]);
        }

        int result=0, t;
        rep(i, 1 , n+1){
            int j=0, k=i;
            while(k<=n){
                multiset<int, greater<int>> subarr(arr.begin()+j, arr.begin()+k);
                // subarr.assign(arr.begin()+j, arr.begin()+k);
                j++, k++;
                // for(int x: subarr)cout<<x;
                //     cout<<endl;
                 t=gXOR(subarr);
                 cout<<i<<':'<<t<<endl;
                 result += t;
            }
        }

        cout<<(result)<<endl;

    // }
    return 0;
}



                
